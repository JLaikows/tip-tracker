import type { Metadata } from "next";
import localFont from "next/font/local";
import { PrimeReactProvider } from "primereact/api";
import { Menubar } from "primereact/menubar";
import Image from "next/image";
import logo from "@/images/just logo transparent.png";
import "./globals.css";
import { ToastContainer } from "react-toastify";
import { cookies } from "next/headers";
import db from "@/lib/primsa";
import { COOKIES } from "@/lib/types";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const endLogo = (
  <div className="flex flex-row">
    <div>Tip Tracker &nbsp;</div>
    <Image aria-hidden src={logo} alt="File icon" width={24} height={24} />
  </div>
);

const signedOutOptions = [
  {
    label: "Login",
    url: "/login",
  },
  {
    label: "Sign Up",
    url: "/signup",
  },
];

const loggedInOptions = [
  {
    label: "Dashboard",
    url: "/dashboard",
  },
  {
    label: "Clients",
    url: "dashboard/clients",
  },
  {
    label: "Logout",
    url: "/logout",
  },
];

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const token = cookies().get(COOKIES.Authorization)?.value;

  let menuOptions = signedOutOptions;

  if (token) {
    const session = await db.session.findFirst({ where: { token } });

    if (session?.userId) {
      menuOptions = loggedInOptions;
    }
  }

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <PrimeReactProvider>
          <Menubar model={menuOptions} end={endLogo} />
          {children}
        </PrimeReactProvider>
        <ToastContainer />
      </body>
    </html>
  );
}
