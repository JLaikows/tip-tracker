// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model loginAttempt {
  id    Int    @id @default(autoincrement())
  phone String @unique
  code  String
}

model user {
  id       Int       @id @default(autoincrement())
  phone    String    @default("")
  password String?
  email    String    @unique @default("")
  sessions session[]
  payouts  payout[]
  clients  client[]
  invoices invoice[]
}

model session {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      user     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model payout {
  id        Int      @id @default(autoincrement())
  amount    Float
  owed      Float    @default(0)
  taxable   Boolean  @default(false)
  state     String
  date      DateTime @default(now())
  weekLabel String?
  userId    Int
  user      user     @relation(fields: [userId], references: [id])
  clientId  Int?
  client    client?  @relation(fields: [clientId], references: [id])
  invoiceId Int?
  invoice   invoice?
}

model invoice {
  id        Int      @id @default(autoincrement())
  number    String?
  amount    Float
  taxable   Boolean  @default(false)
  payed     Boolean  @default(false)
  due       DateTime @default(now())
  weekLabel String?
  userId    Int
  user      user     @relation(fields: [userId], references: [id])
  clientId  Int
  client    client   @relation(fields: [clientId], references: [id])
  payoutId  Int?     @unique
  payout    payout?  @relation(fields: [payoutId], references: [id])
}

model client {
  id       Int       @id @default(autoincrement())
  name     String
  state    String
  userId   Int
  user     user      @relation(fields: [userId], references: [id])
  payouts  payout[]
  invoices invoice[]
}
